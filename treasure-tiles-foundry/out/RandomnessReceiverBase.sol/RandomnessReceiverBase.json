{"abi":[{"type":"function","name":"acceptOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createSubscriptionAndFundNative","inputs":[],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"getBalance","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"isInFlight","inputs":[{"name":"requestId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"pendingRequestExists","inputs":[{"name":"subId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"randomnessSender","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IRandomnessSender"}],"stateMutability":"view"},{"type":"function","name":"receiveRandomness","inputs":[{"name":"requestID","type":"uint256","internalType":"uint256"},{"name":"randomness","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setRandomnessSender","inputs":[{"name":"_randomnessSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setSubId","inputs":[{"name":"subId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"subscriptionId","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"topUpSubscriptionNative","inputs":[],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"to","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateSubscription","inputs":[{"name":"consumers","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Funded","inputs":[{"name":"sender","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"NewSubscriptionId","inputs":[{"name":"subscriptionId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OwnershipTransferRequested","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Received","inputs":[{"name":"","type":"address","indexed":false,"internalType":"address"},{"name":"","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Withdrawn","inputs":[{"name":"recipient","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","createSubscriptionAndFundNative()":"b96dbba7","getBalance()":"12065fe0","isInFlight(uint256)":"cd802c91","owner()":"8da5cb5b","pendingRequestExists(uint256)":"41af6c87","randomnessSender()":"df3fafe8","receiveRandomness(uint256,bytes32)":"431ac657","setRandomnessSender(address)":"011164a6","setSubId(uint256)":"80980043","subscriptionId()":"09c1ba2e","topUpSubscriptionNative()":"1d2b2afd","transferOwnership(address)":"f2fde38b","updateSubscription(address[])":"36bfffed"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"subscriptionId\",\"type\":\"uint256\"}],\"name\":\"NewSubscriptionId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscriptionAndFundNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"isInFlight\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomnessSender\",\"outputs\":[{\"internalType\":\"contract IRandomnessSender\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestID\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"randomness\",\"type\":\"bytes32\"}],\"name\":\"receiveRandomness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_randomnessSender\",\"type\":\"address\"}],\"name\":\"setRandomnessSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subId\",\"type\":\"uint256\"}],\"name\":\"setSubId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subscriptionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"topUpSubscriptionNative\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"name\":\"updateSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Randamu\",\"details\":\"This contract ensures that only a designated randomness sender can provide randomness values.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Ensures that the provided sender address is non-zero.\",\"params\":{\"_randomnessSender\":\"The address of the randomness sender contract.\"}},\"createSubscriptionAndFundNative()\":{\"details\":\"Only callable by the contract owner. If a subscription already exists, it will not be recreated.The ETH value sent in the transaction (`msg.value`) will be used to fund the subscription.\"},\"receiveRandomness(uint256,bytes32)\":{\"details\":\"This function is restricted to calls from the designated randomness sender.\",\"params\":{\"randomness\":\"The generated random value as a `bytes32` type.\",\"requestID\":\"The unique identifier of the randomness request.\"}},\"setRandomnessSender(address)\":{\"details\":\"Only the contract owner can call this function.\",\"params\":{\"_randomnessSender\":\"The address of the deployed IRandomnessSender contract.\"}},\"setSubId(uint256)\":{\"details\":\"Only callable by the contract owner.\",\"params\":{\"subId\":\"The new subscription ID to be set.\"}},\"topUpSubscriptionNative()\":{\"details\":\"Requires a valid subscription ID to be set before calling.The amount to top up should be sent along with the transaction as `msg.value`.\"},\"updateSubscription(address[])\":{\"details\":\"Requires the subscription ID to be set before calling.\",\"params\":{\"consumers\":\"An array of addresses to be added as authorized consumers.\"}}},\"stateVariables\":{\"randomnessSender\":{\"details\":\"This is an immutable reference set at deployment.\"},\"subscriptionId\":{\"details\":\"Used in interactions with IRandomnessSender for subscription management, e.g.,funding and consumer contract address registration.\"}},\"title\":\"RandomnessReceiverBase contract\",\"version\":1},\"userdoc\":{\"events\":{\"Funded(address,uint256)\":{\"notice\":\"Event to log deposits of native tokens\"},\"NewSubscriptionId(uint256)\":{\"notice\":\"Event logged when a new subscription id is set\"},\"Received(address,uint256)\":{\"notice\":\"Event to log direct transfer of native tokens to the contract\"},\"Withdrawn(address,uint256)\":{\"notice\":\"Event to log withdrawals of native tokens\"}},\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"constructor\":{\"notice\":\"Initializes the contract with a specified randomness sender.\"},\"createSubscriptionAndFundNative()\":{\"notice\":\"Creates and funds a new Randamu subscription using native currency.\"},\"getBalance()\":{\"notice\":\"getBalance returns the native balance of the consumer contract.For direct funding requests, the contract needs to hold native tokens to sufficient enough to cover the cost of the request.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"randomnessSender()\":{\"notice\":\"The contract responsible for providing randomness.\"},\"receiveRandomness(uint256,bytes32)\":{\"notice\":\"Receives randomness for a specific request ID from the designated sender.\"},\"setRandomnessSender(address)\":{\"notice\":\"Sets the address of the IRandomnessSender contract.\"},\"setSubId(uint256)\":{\"notice\":\"Sets the Randamu subscription ID used for conditional encryption oracle services.\"},\"subscriptionId()\":{\"notice\":\"The subscription ID used for conditional encryption.\"},\"topUpSubscriptionNative()\":{\"notice\":\"Tops up the Randamu subscription using native currency (e.g., ETH).\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"},\"updateSubscription(address[])\":{\"notice\":\"Adds a list of consumer addresses to the Randamu subscription.\"}},\"notice\":\"Abstract contract to facilitate receiving randomness from an external source.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/randomness-solidity/src/RandomnessReceiverBase.sol\":\"RandomnessReceiverBase\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/randomness-solidity/lib/chainlink/contracts/\",\":@ds-test/=lib/randomness-solidity/lib/forge-std/lib/ds-test/src/\",\":@forge-std/=lib/randomness-solidity/lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":chainlink/=lib/randomness-solidity/lib/chainlink/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/randomness-solidity/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":randomness-solidity/=lib/randomness-solidity/\"]},\"sources\":{\"lib/randomness-solidity/src/RandomnessReceiverBase.sol\":{\"keccak256\":\"0x466ac56c36b4f25f259857efe4721ed72dae740c98ca20e4b81f80ebe27b7ca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bf2f3b6824285a65ee3c2fbfc523277e8991a44417aa3b32b05a2c27198f5c4\",\"dweb:/ipfs/QmXMPRj4D229xxCwJsm2JdcQx6gcrewPfiKpCL8SWGDL3Y\"]},\"lib/randomness-solidity/src/access/ConfirmedOwner.sol\":{\"keccak256\":\"0x03c851fae5cb1d897fc2267282ead978c2239cfcf01048880ad5f69b153be766\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7251d1356fd5113f761d334fd942e5b264744e8d059f88f5f15446f1e2b8d9aa\",\"dweb:/ipfs/QmWuo6HmXndtmgaubC8kEWnnw86ssTNiKeYB8gL6zEKkPv\"]},\"lib/randomness-solidity/src/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x36d79b9187d9e5df160427cbaa3dc0c6d458574f997a587c9d453186d8f7b4a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://405cb6b611296d84786ec438a49d047dfb84c553c43bc56b895dd8e991bd081b\",\"dweb:/ipfs/QmdGjfNDCEKeensL76jkSh4ANwJkTR9mAUVSEH58SaYRcS\"]},\"lib/randomness-solidity/src/interfaces/IOwnable.sol\":{\"keccak256\":\"0x421786654625f73d9c1a417145ad64a1e18339a0abc0cd95807c088b5048a443\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a74365b40eb0402a6433e4620d08111a2dd4e25ba3b5a49b4fb0bd374d375c1\",\"dweb:/ipfs/QmPcBvaxLZXMYuPX6iJhWV7BEjAPNtfy4DN545BpGDkiPb\"]},\"lib/randomness-solidity/src/interfaces/IRandomnessReceiver.sol\":{\"keccak256\":\"0xae8869223f48487a0cd823603d7e6853339108fed962e8379f5608ceee454b79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b3891a63ac94b291c4b17c3e4b129c1b185a2888f34f1043ea848dd400abdfd\",\"dweb:/ipfs/Qmdm3cQDrvDgEYQeScJqXZLLqisnPhuEZq3anyuLZpuYMy\"]},\"lib/randomness-solidity/src/interfaces/IRandomnessSender.sol\":{\"keccak256\":\"0x58ee82c4f6e82e5ae2e8bb91760cd1094efd00010bfe0cad3b1aff837b4d94e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46f011b10b1b4f8fbbf6bb898e684056fc4b19e265ddc341f76beb2ee8058400\",\"dweb:/ipfs/QmYouXM8jB7LK9TuESS1DwRpoH2sB9uHdEQZwYjHodyiAm\"]},\"lib/randomness-solidity/src/interfaces/ISubscription.sol\":{\"keccak256\":\"0x07d27a4b676a804ff8ada76aa683e9c30662c8df52fc68d105693444249db538\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bc9b42007e254d3ec5acbdcc231425e22164628b7fc829107e3cc85347425c7\",\"dweb:/ipfs/QmTN1iW12TgtQaAdXLr5uCmaG8meG67ocGmJ37sikBCW1H\"]},\"lib/randomness-solidity/src/libraries/BLS.sol\":{\"keccak256\":\"0x3f8dfc97014975855476cd77959369694c33afc1f2977572b41db3e467e85098\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3734a6336c7602a389b6844e34757bcd72a964709da7f41cc644cab28742624d\",\"dweb:/ipfs/QmTj5BZbsAvwhG75zxRDGDz6QhYgaU2BzqjbJSP2puLHU1\"]},\"lib/randomness-solidity/src/libraries/ModExp.sol\":{\"keccak256\":\"0x91d21821894be2362f9defd2d74b7531704d0f62f7c5a165f37bc486e5d4f785\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73f4ecf35a84174528f26b1e91aed78dea7f22d1f6a2006a11a5b22ea3e446aa\",\"dweb:/ipfs/QmRyq3TAChiN5ga1TgXTG278n7KrUuTcPzoMj96Q5jdSqB\"]},\"lib/randomness-solidity/src/libraries/TypesLib.sol\":{\"keccak256\":\"0xafa1f2d1d0ed8ff42f40f2ce8dff3ca4b63118521b4673a34f8f801af25ffc0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab5a20714ed923c65c945271015d9161613c101fdf533635cc85c0b871ab6d44\",\"dweb:/ipfs/QmaHEBcg64VZGxvZmus3SZuv58eLc63JYfZikCaWiRJnf8\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"Funded","anonymous":false},{"inputs":[{"internalType":"uint256","name":"subscriptionId","type":"uint256","indexed":true}],"type":"event","name":"NewSubscriptionId","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferRequested","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[{"internalType":"address","name":"","type":"address","indexed":false},{"internalType":"uint256","name":"","type":"uint256","indexed":false}],"type":"event","name":"Received","anonymous":false},{"inputs":[{"internalType":"address","name":"recipient","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"Withdrawn","anonymous":false},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"acceptOwnership"},{"inputs":[],"stateMutability":"payable","type":"function","name":"createSubscriptionAndFundNative"},{"inputs":[],"stateMutability":"view","type":"function","name":"getBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"view","type":"function","name":"isInFlight","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"stateMutability":"view","type":"function","name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomnessSender","outputs":[{"internalType":"contract IRandomnessSender","name":"","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"requestID","type":"uint256"},{"internalType":"bytes32","name":"randomness","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"receiveRandomness"},{"inputs":[{"internalType":"address","name":"_randomnessSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setRandomnessSender"},{"inputs":[{"internalType":"uint256","name":"subId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setSubId"},{"inputs":[],"stateMutability":"view","type":"function","name":"subscriptionId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"payable","type":"function","name":"topUpSubscriptionNative"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"},{"inputs":[{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"updateSubscription"}],"devdoc":{"kind":"dev","methods":{"constructor":{"details":"Ensures that the provided sender address is non-zero.","params":{"_randomnessSender":"The address of the randomness sender contract."}},"createSubscriptionAndFundNative()":{"details":"Only callable by the contract owner. If a subscription already exists, it will not be recreated.The ETH value sent in the transaction (`msg.value`) will be used to fund the subscription."},"receiveRandomness(uint256,bytes32)":{"details":"This function is restricted to calls from the designated randomness sender.","params":{"randomness":"The generated random value as a `bytes32` type.","requestID":"The unique identifier of the randomness request."}},"setRandomnessSender(address)":{"details":"Only the contract owner can call this function.","params":{"_randomnessSender":"The address of the deployed IRandomnessSender contract."}},"setSubId(uint256)":{"details":"Only callable by the contract owner.","params":{"subId":"The new subscription ID to be set."}},"topUpSubscriptionNative()":{"details":"Requires a valid subscription ID to be set before calling.The amount to top up should be sent along with the transaction as `msg.value`."},"updateSubscription(address[])":{"details":"Requires the subscription ID to be set before calling.","params":{"consumers":"An array of addresses to be added as authorized consumers."}}},"version":1},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"constructor":{"notice":"Initializes the contract with a specified randomness sender."},"createSubscriptionAndFundNative()":{"notice":"Creates and funds a new Randamu subscription using native currency."},"getBalance()":{"notice":"getBalance returns the native balance of the consumer contract.For direct funding requests, the contract needs to hold native tokens to sufficient enough to cover the cost of the request."},"owner()":{"notice":"Get the current owner"},"randomnessSender()":{"notice":"The contract responsible for providing randomness."},"receiveRandomness(uint256,bytes32)":{"notice":"Receives randomness for a specific request ID from the designated sender."},"setRandomnessSender(address)":{"notice":"Sets the address of the IRandomnessSender contract."},"setSubId(uint256)":{"notice":"Sets the Randamu subscription ID used for conditional encryption oracle services."},"subscriptionId()":{"notice":"The subscription ID used for conditional encryption."},"topUpSubscriptionNative()":{"notice":"Tops up the Randamu subscription using native currency (e.g., ETH)."},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address."},"updateSubscription(address[])":{"notice":"Adds a list of consumer addresses to the Randamu subscription."}},"version":1}},"settings":{"remappings":["@chainlink/contracts/=lib/randomness-solidity/lib/chainlink/contracts/","@ds-test/=lib/randomness-solidity/lib/forge-std/lib/ds-test/src/","@forge-std/=lib/randomness-solidity/lib/forge-std/src/","@openzeppelin/=lib/openzeppelin-contracts/","chainlink/=lib/randomness-solidity/lib/chainlink/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/randomness-solidity/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","randomness-solidity/=lib/randomness-solidity/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/randomness-solidity/src/RandomnessReceiverBase.sol":"RandomnessReceiverBase"},"evmVersion":"shanghai","libraries":{}},"sources":{"lib/randomness-solidity/src/RandomnessReceiverBase.sol":{"keccak256":"0x466ac56c36b4f25f259857efe4721ed72dae740c98ca20e4b81f80ebe27b7ca2","urls":["bzz-raw://7bf2f3b6824285a65ee3c2fbfc523277e8991a44417aa3b32b05a2c27198f5c4","dweb:/ipfs/QmXMPRj4D229xxCwJsm2JdcQx6gcrewPfiKpCL8SWGDL3Y"],"license":"MIT"},"lib/randomness-solidity/src/access/ConfirmedOwner.sol":{"keccak256":"0x03c851fae5cb1d897fc2267282ead978c2239cfcf01048880ad5f69b153be766","urls":["bzz-raw://7251d1356fd5113f761d334fd942e5b264744e8d059f88f5f15446f1e2b8d9aa","dweb:/ipfs/QmWuo6HmXndtmgaubC8kEWnnw86ssTNiKeYB8gL6zEKkPv"],"license":"MIT"},"lib/randomness-solidity/src/access/ConfirmedOwnerWithProposal.sol":{"keccak256":"0x36d79b9187d9e5df160427cbaa3dc0c6d458574f997a587c9d453186d8f7b4a2","urls":["bzz-raw://405cb6b611296d84786ec438a49d047dfb84c553c43bc56b895dd8e991bd081b","dweb:/ipfs/QmdGjfNDCEKeensL76jkSh4ANwJkTR9mAUVSEH58SaYRcS"],"license":"MIT"},"lib/randomness-solidity/src/interfaces/IOwnable.sol":{"keccak256":"0x421786654625f73d9c1a417145ad64a1e18339a0abc0cd95807c088b5048a443","urls":["bzz-raw://0a74365b40eb0402a6433e4620d08111a2dd4e25ba3b5a49b4fb0bd374d375c1","dweb:/ipfs/QmPcBvaxLZXMYuPX6iJhWV7BEjAPNtfy4DN545BpGDkiPb"],"license":"MIT"},"lib/randomness-solidity/src/interfaces/IRandomnessReceiver.sol":{"keccak256":"0xae8869223f48487a0cd823603d7e6853339108fed962e8379f5608ceee454b79","urls":["bzz-raw://3b3891a63ac94b291c4b17c3e4b129c1b185a2888f34f1043ea848dd400abdfd","dweb:/ipfs/Qmdm3cQDrvDgEYQeScJqXZLLqisnPhuEZq3anyuLZpuYMy"],"license":"MIT"},"lib/randomness-solidity/src/interfaces/IRandomnessSender.sol":{"keccak256":"0x58ee82c4f6e82e5ae2e8bb91760cd1094efd00010bfe0cad3b1aff837b4d94e5","urls":["bzz-raw://46f011b10b1b4f8fbbf6bb898e684056fc4b19e265ddc341f76beb2ee8058400","dweb:/ipfs/QmYouXM8jB7LK9TuESS1DwRpoH2sB9uHdEQZwYjHodyiAm"],"license":"MIT"},"lib/randomness-solidity/src/interfaces/ISubscription.sol":{"keccak256":"0x07d27a4b676a804ff8ada76aa683e9c30662c8df52fc68d105693444249db538","urls":["bzz-raw://7bc9b42007e254d3ec5acbdcc231425e22164628b7fc829107e3cc85347425c7","dweb:/ipfs/QmTN1iW12TgtQaAdXLr5uCmaG8meG67ocGmJ37sikBCW1H"],"license":"MIT"},"lib/randomness-solidity/src/libraries/BLS.sol":{"keccak256":"0x3f8dfc97014975855476cd77959369694c33afc1f2977572b41db3e467e85098","urls":["bzz-raw://3734a6336c7602a389b6844e34757bcd72a964709da7f41cc644cab28742624d","dweb:/ipfs/QmTj5BZbsAvwhG75zxRDGDz6QhYgaU2BzqjbJSP2puLHU1"],"license":"MIT"},"lib/randomness-solidity/src/libraries/ModExp.sol":{"keccak256":"0x91d21821894be2362f9defd2d74b7531704d0f62f7c5a165f37bc486e5d4f785","urls":["bzz-raw://73f4ecf35a84174528f26b1e91aed78dea7f22d1f6a2006a11a5b22ea3e446aa","dweb:/ipfs/QmRyq3TAChiN5ga1TgXTG278n7KrUuTcPzoMj96Q5jdSqB"],"license":"MIT"},"lib/randomness-solidity/src/libraries/TypesLib.sol":{"keccak256":"0xafa1f2d1d0ed8ff42f40f2ce8dff3ca4b63118521b4673a34f8f801af25ffc0c","urls":["bzz-raw://ab5a20714ed923c65c945271015d9161613c101fdf533635cc85c0b871ab6d44","dweb:/ipfs/QmaHEBcg64VZGxvZmus3SZuv58eLc63JYfZikCaWiRJnf8"],"license":"MIT"}},"version":1},"id":16}